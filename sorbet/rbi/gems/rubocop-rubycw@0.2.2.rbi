# typed: true

# DO NOT EDIT MANUALLY
# This is an autogenerated file for types exported from the `rubocop-rubycw` gem.
# Please instead update this file by running `bin/tapioca gem rubocop-rubycw`.


# source://rubocop-rubycw//lib/rubocop/rubycw/version.rb#1
module RuboCop; end

# source://rubocop-rubycw//lib/rubocop/cop/rubycw/rubycw.rb#4
module RuboCop::Cop; end

# source://rubocop-rubycw//lib/rubocop/cop/rubycw/rubycw.rb#5
module RuboCop::Cop::Rubycw; end

# Execute `ruby -cw` and wrap the warning as RuboCop offense.
#
# source://rubocop-rubycw//lib/rubocop/cop/rubycw/rubycw.rb#7
class RuboCop::Cop::Rubycw::Rubycw < ::RuboCop::Cop::Base
  include ::RuboCop::Cop::RangeHelp

  # source://rubocop-rubycw//lib/rubocop/cop/rubycw/rubycw.rb#10
  def on_new_investigation; end

  # source://rubocop-rubycw//lib/rubocop/cop/rubycw/rubycw.rb#22
  def warnings(source); end
end

# source://rubocop-rubycw//lib/rubocop/rubycw/version.rb#2
module RuboCop::Rubycw; end

# source://rubocop-rubycw//lib/rubocop/rubycw.rb#9
RuboCop::Rubycw::CONFIG = T.let(T.unsafe(nil), Hash)

# source://rubocop-rubycw//lib/rubocop/rubycw.rb#8
RuboCop::Rubycw::CONFIG_DEFAULT = T.let(T.unsafe(nil), Pathname)

# source://rubocop-rubycw//lib/rubocop/rubycw.rb#5
class RuboCop::Rubycw::Error < ::StandardError; end

# Your code goes here...
#
# source://rubocop-rubycw//lib/rubocop/rubycw.rb#7
RuboCop::Rubycw::PROJECT_ROOT = T.let(T.unsafe(nil), Pathname)

# A plugin that integrates RuboCop Rubycw with RuboCop's plugin system.
#
# source://rubocop-rubycw//lib/rubocop/rubycw/plugin.rb#8
class RuboCop::Rubycw::Plugin < ::LintRoller::Plugin
  # source://rubocop-rubycw//lib/rubocop/rubycw/plugin.rb#9
  def about; end

  # source://rubocop-rubycw//lib/rubocop/rubycw/plugin.rb#22
  def rules(_context); end

  # @return [Boolean]
  #
  # source://rubocop-rubycw//lib/rubocop/rubycw/plugin.rb#18
  def supported?(context); end
end

# source://rubocop-rubycw//lib/rubocop/rubycw/version.rb#3
RuboCop::Rubycw::VERSION = T.let(T.unsafe(nil), String)

# source://rubocop-rubycw//lib/rubocop/rubycw/warning_capturer.rb#5
module RuboCop::Rubycw::WarningCapturer
  class << self
    # source://rubocop-rubycw//lib/rubocop/rubycw/warning_capturer.rb#22
    def capture(source); end

    # source://rubocop-rubycw//lib/rubocop/rubycw/warning_capturer.rb#30
    def start; end

    # source://rubocop-rubycw//lib/rubocop/rubycw/warning_capturer.rb#36
    def stop; end

    # source://rubocop-rubycw//lib/rubocop/rubycw/warning_capturer.rb#41
    def warnings; end
  end
end

# source://rubocop-rubycw//lib/rubocop/rubycw/warning_capturer.rb#7
module Warning
  extend ::Warning

  class << self
    # source://rubocop-rubycw//lib/rubocop/rubycw/warning_capturer.rb#8
    def warn(*message, **kwargs); end
  end
end
